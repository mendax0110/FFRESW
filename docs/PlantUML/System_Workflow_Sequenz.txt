@startuml
skinparam backgroundColor #FAFAFA

title "System Workflow Sequenz"

participant "HAS" as HAS order -1
participant "SensorActorEndpointTask" as ST
participant "FlybackVacControlTask" as FT
participant "ReportTask" as RT
participant "StackMonitorTask" as STA
participant "comModule" as COM
participant "jsonModule" as JS
participant "VAT Microcontroller" as VAT order 99

HAS -> ST : hardwareDataUpdate()
activate ST

ST -> sensorModule : readSensors()
activate sensorModule 
sensorModule --> ST : sensorData
deactivate sensorModule 

ST -> FT : update(data)
activate FT
FT -> flyback : adjust()
flyback --> FT : status
FT --> ST : ack
deactivate FT

ST -> FT : update(data)
activate FT
FT -> vacControl : adjust()
vacControl --> FT : status
FT --> ST : ack
deactivate FT

ST -> COM : endpointRequest()
activate COM
COM --> JS : prepared Json
activate JS
JS --> ST : jsonResponse
JS --> FT : jsonResponse
FT -> COM : request()
deactivate COM
deactivate JS

FT -> COM : scenarioRequest()
activate COM
COM -> VAT : proprietaryFrame(ETH)
activate VAT
VAT --> COM : proprietaryResponse()
deactivate VAT
COM --> FT : ethFrameResponse
deactivate COM

ST -> RT : queueStatus()
activate RT
RT -> COM : sendReport()
COM -> VAT : proprietaryReportFrame()
activate VAT
VAT --> COM : reportAck()
deactivate VAT
COM --> RT : ack
deactivate RT

RT -> ReportModule : request()
activate ReportModule
ReportModule --> RT : ack()
deactivate ReportModule

RT -> ReportModule : checkMemory()
activate ReportModule 
ReportModule --> RT : memoryStatus
deactivate ReportModule 

RT -> ReportModule : checkSystemStatus()
activate ReportModule 
ReportModule --> RT : systemStatus
deactivate ReportModule

STA -> ST : checkStacks()
activate ST
ST --> STA : stackStatus()
deactivate ST

STA -> FT : checkStacks()
activate FT
FT --> STA : stackStatus()
deactivate FT

STA -> RT : checkStacks()
activate RT
RT --> STA : stackStatus()
deactivate RT

ST --> HAS : hardwareStatus()
deactivate ST
@enduml