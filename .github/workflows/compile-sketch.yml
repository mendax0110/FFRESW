name: Arduino CI

on:
  push:
    paths:
      - 'eSW/FFRESW/FFRESW/**'
      - 'eSW/libraries/**'
      - 'external/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'eSW/FFRESW/FFRESW/**'
      - 'eSW/libraries/**'
      - 'external/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      - name: Install arduino:avr core
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:avr@1.8.3

      - name: Copy custom libraries into Arduino CLI libraries folder
        run: |
          mkdir -p ~/Arduino/libraries
          cp -r eSW/libraries/* ~/Arduino/libraries/
          cp -r external/* ~/Arduino/libraries/

      - name: Show sketch file content (debug)
        run: |
          echo "----- FFRESW.ino -----"
          cat eSW/FFRESW/FFRESW/FFRESW.ino

      - name: Clear Arduino build cache
        run: |
          rm -rf ~/.arduino15/staging
          rm -rf ~/.cache/arduino

      - name: Compile Arduino sketch
        run: |
          arduino-cli compile --clean --verbose \
            --fqbn arduino:avr:mega \
            --libraries ~/Arduino/libraries \
            --export-binaries \
            eSW/FFRESW/FFRESW

      - name: Install analysis tools
        run: sudo apt-get update && sudo apt-get install -y binutils

      - name: Generate ELF Analysis Report (Markdown)
        run: |
          mkdir -p elf-analysis
          for elf_file in $(find /home/runner/.cache/arduino/sketches/ -name '*.elf'); do
            base_name=$(basename "$elf_file" .elf)
            report_file="elf-analysis/${base_name}_report.md"
            echo "# ELF Analysis Report for ${base_name}.elf" > "$report_file"
            echo "" >> "$report_file"
            echo "## ELF Header" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -h "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
            echo "## Section Headers" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -S "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
            echo "## Symbols" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -s "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
            echo "## Disassembly (First 100 lines)" >> "$report_file"
            echo '```' >> "$report_file"
            objdump -d "$elf_file" | head -n 100 >> "$report_file"
            echo '```' >> "$report_file"
          done

      - name: Upload ELF Analysis Report
        uses: actions/upload-artifact@v4
        with:
          name: elf-analysis-report
          path: elf-analysis/
          if-no-files-found: error
          compression-level: 6
          overwrite: true

      - name: Upload Build Artifacts (HEX, BIN, ELF)
        uses: actions/upload-artifact@v4
        with:
          name: arduino-build-artifacts
          path: |
            /home/runner/.cache/arduino/sketches/**/*.hex
            /home/runner/.cache/arduino/sketches/**/*.bin
            /home/runner/.cache/arduino/sketches/**/*.elf
          if-no-files-found: warn
          compression-level: 6
